*{
  margin: 0px;
  padding: 0px;
  box-sizing: border-box;
}

/* //////////////////////Navigation Bar////////////////////// */

nav {
  display: flex;
  justify-content: space-around;
  align-items: center;
  min-height: 8vh;
  background-color: black;
}

.logo {
  color: white;
  text-transform: uppercase;
  letter-spacing: 3px;
  font-size: 24px;
}

#directions,
#portfolio,
#github {
  text-decoration: none;
  /* background-color: green; */
  color: white;
  font-size: 20px;
}
.nav-links {
  display: flex;
  /* background-color: red; */
  justify-content: space-around;
  width: 40%;
  cursor: pointer;
}

.nav-links li {
  list-style: none;
  font: white;
}

.nav-links {
  color: white;
  text-decoration: none;
  letter-spacing: 1px;
  font-weight: bold;
}

.burger {
  display: none;
}

@media screen and (max-width: 1024px) {
  .nav-links {
    width: 50%;
  }
}

@media screen and (max-width: 768px) {
  .nav-links{
    position: absolute;
    right: 0px;
    /* /Height is for the screen column */
    height: 92vh;
    /* top is still for the nav bar w/ title */
    top:8vh;
    background-color: black;
    display: flex;
    flex-direction: column;
    align-items: center;  
    width: 50%;  
    transform: translateX(100%);
    z-index: 1;

  }

  .burger {
    /* Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width */
    display: block;
    cursor: pointer;
  }
}

.burger div{
  width: 25px;
  height: 3px;
  background: white;
  margin: 5px;
}

/* 1. The burger is clicked via an event listener in Javascript
2. That calls a function that grabs the nav element from HTML, and returns all class names of the element.  
3. It toggles nav-acive from css which is linked somehow to the nav-links inside the media query to set something to T or F based on the initial state. */
.nav-active {
 transform: translateX(0%);
}

.dark-mode{
  background-color: black;
  color: white;
}


.title {
  display: grid;
  grid-template-columns: repeat (3, 1fr) ;
}

/* //////////////////////Directions Modal////////////////////// */
.modal {
  display: none;
  position: fixed; 
  padding-top: 100px;
  left: 0; 
  top: 8%;
  width: 100%;
  height: 50%; 
  z-index: 1;
}

.modal-content {
  position: relative; 
  background-color:black;
  /* padding: 10px;  */
  margin: auto; 
  width: 75%;  
  -webkit-animation-name: animatetop;
  -webkit-animation-duration: 0.4s;
  animation-name: animatetop;
  animation-duration: 0.4s;
  z-index: 1;
}

p {
  display: flex;
  justify-content: center;
  text-align: center;
}

/* //////////////////////Winner Modal Modal////////////////////// */
.winner-modal-content {
  position: relative; 
  background-color:black;
  color: white;
  /* padding: 10px;  */
  margin: auto;
  height: 75%; 
  width: 75%;  
  -webkit-animation-name: animatetop;
  -webkit-animation-duration: 0.4s;
  animation-name: animatetop;
  animation-duration: 0.4s;
  z-index: 1;
}

p {
 display: flex;
 justify-content: center;
 padding: 10%;
 font-size: 38px;
 font-weight: bold;
 justify-content: center;
}

@-webkit-keyframes animatetop {
  from {top:-300px; opacity:0} 
  to {top:0; opacity:1}
}
@keyframes animatetop {
  from {top:-300px; opacity:0}
  to {top:0; opacity:1}
}

.close-btn, .toggle{
  display: flex;
  justify-content: center;
  align-items: center;
  /* margin: 0 auto; */
  color: black;
  border-radius: 50px;
  width: 100%;
  text-align: center;
  background-color: grey;
  padding: 10px 10px;
}

/* //////////////////////Game Grid////////////////////// */
.memory-game {
  display: grid;
  grid-template-columns: repeat(6, 180px);
  padding: 25px;
  justify-content: center;
  grid-auto-rows: 200px;
  perspective: 1000px; 
  /* the perspective property gives depth to the card flip. */
}

@media screen and (max-width: 1024px) {
  .memory-game {
  grid-template-columns: repeat(4, 180px);
  padding: 45px;
  }
}

@media screen and (max-width: 768px) {
  .memory-game {
  grid-template-columns: repeat(3, 180px);
  padding: 60;
  }
}

.memory-card{
  margin: 8px;
  /* /^ Margin, which lets you create space around elements is set her for space around each  card*/
  transform: scale(1);
  transform-style: preserve-3d;
  transition: 0.5s;
}

.memory-card:active {
  transform: scale(.97);
  transition: transform 0.3s;
}

/* Flip class from Javascript */
.memory-card.flip{
  transform: rotateY(180deg);
}

.front-face,
.back-face { 
  width: 100%;
  height: 100%;
  position: absolute;
  backface-visibility: hidden;
}

.front-face{
  transform: rotateY(180deg);
}
/* /^ cards are positioned relative to the memory card which is within the memory-game 
Where he display:flex and wrap take place */

.score, #score-text{
  display: flex;
  justify-content: center;
  /* margin: 0 8px; */
  font-size: 65px;
}

/* /////////////////////Slider for Darkmode///////////////////// */
.switch {
  position: relative;
  display: block;
  width: 60px;
  height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

/* The slider */
.slider-round {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider-round:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: black ;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider-round {
  background-color: white;
}

input:checked + .slider-round:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

/* Rounded sliders */
.slider-round {
  border-radius: 34px;
}

.slider-round:before {
  border-radius: 50%;
}

/* ///////////////////////Winner Popup Modal/////////////////////// */
.winner-modal {
  display: none;
  position: fixed; 
  /* justify-content: center; */
  padding-top: 100px;
  left: 0; 
  top: 8%;
  width: 100%;
  height: 75%; 
  z-index: 1;
}

.close-winner {
  display: flex;
  justify-content: center;
  align-items: center;
  /* margin: 0 auto; */
  color: black;
  border-radius: 50px;
  width: 100%;
  text-align: center;
  background-color: grey;
  padding: 10px 10px;
}
/* ///////////////////////Homepage Enter/////////////////////// */
.homepage {
  background-color: black;
}
.title-container {
  animation: 1s ease-out 0s 1 slideInFromTop;
  display: flex;
  justify-content: space-around;
  padding: 7%;
  margin: 8px;
}

.title {
  color: white;
  display: flex;
  justify-content: center;
  align-items: center;
  text-transform: uppercase;
  font-size: 100px;
  letter-spacing: 4px;
}

.play-btn {  
 height: 50px;
 width: 150%;
 font-size: 35px;
 cursor: pointer;
}

@keyframes slideInFromTop {
  0% {
    transform: translateY(-300%);
  }
  100% {
    transform: translateY(0);
  }
}
